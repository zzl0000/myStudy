/**
 * flexbox 布局指南
 * time 2017.4.20
 * version 1.0
 */


/**
 * 1：flexbox 是整个模块  当中一部分是容器(父元素，伸缩容器)，另一部分是子元素(伸缩项目)
 * display: flex | inline-flex 适用于父元素。
 * ☆注意
   CSS的columns在伸缩容器上没有效果。
   float、clear和vertical-align在伸缩项目上没有效果。
 * flex-direction 适用于 子元素 
   这个主要用来创建主轴，从而定义了子元素在父元素中的方向
   	row(默认值)：在“ltr”排版方式下从左向右排列；在“rtl”排版方式下从右向左排列。
	row-reverse：与row排列方向相反，在“ltr”排版方式下从右向左排列；在“rtl”排版方式下从左向右排列。
	column：类似 于row，不过是从上到下排列
	column-reverse：类似于row-reverse，不过是从下到上排列。
 *	flex-wrap: nowrap | wrap | wrap-reverse	
 *	nowrap(默认值)：伸缩容器单行显示，“ltr”排版下，伸缩项目从左到右排列；“rtl”排版上伸缩项目从右向左排列。
	wrap：伸缩容器多行显示，“ltr”排版下，伸缩项目从左到右排列；“rtl”排版上伸缩项目从右向左排列。
	wrap-reverse：伸缩容器多行显示，“ltr”排版下，伸缩项目从右向左排列；“rtl”排版下，伸缩项目从左到右排列。（和wrap相反）
 */

a{
	display: flex | inline-flex ;
	flex-wrap: nowrap | wrap | wrap-reverse;
}

b{
	flex-direction: row | row-reverse | column | column-reverse；
}

.parent {
  display: flex;
  height: 300px; /* Or whatever */
}

.child {
  width: 100px;  /* Or whatever */
  height: 100px; /* Or whatever */
  margin: auto;  /* Magic! */
}



.flex-container {
  /* 我们第一步要创建一个flex文档流（创建伸缩容器） */
  display: flex;
  
  /* 然后我们定义伸缩流方向，并且可以换行
   * 记得我们要这样设置:
   * flex-direction: row;
   * flex-wrap: wrap;
   */
  flex-flow: row wrap;
  
  /* 然后我们定义了如何分配伸缩容器的剩余空间 */
  justify-content: space-around;
}




/* Large */
.navigation {
  display: flex;
  flex-flow: row wrap;
  /* 所有列面向主轴终点位置靠齐 */
  justify-content: flex-end;
}

/* Medium screens */
@media all and (max-width: 800px) {
  .navigation {
    /* 当在中等屏幕中, 导航项目居中显示，并且剩余空间平均分布在列表之间 */
    justify-content: space-around;
  }
}

/* Small screens */
@media all and (max-width: 500px) {
  .navigation {
    /* 在小屏幕下, 我们没有足够空间行排列，但我们可以换成列排列 */
    flex-direction: column;
  }
}



.wrapper {
  display: flex;
  flex-flow: row wrap;
}

/* 设置所有标签宽度为100% */
.header, 
.main, 
.nav, 
.aside, 
.footer {
  flex: 1 100%;
}

/* 我们利用文档流顺序，考虑移动端先行
 * 在这个例子中的顺序:
 * 1. header
 * 2. nav
 * 3. main
 * 4. aside
 * 5. footer
 */

/* Medium screens */
@media all and (min-width: 600px) {
  /* 两个边栏在同一行 */
  .aside { flex: 1 auto; }
}

/* Large screens */
@media all and (min-width: 800px) {
  /* 设置左边栏在主内容左边
   * 设置主内容区域宽度是其他两个侧边栏宽度的两倍
   */
  .main { flex: 2 0px; }
  
  .aside-1 { order: 1; }
  .main    { order: 2; }
  .aside-2 { order: 3; }
  .footer  { order: 4; }
}
